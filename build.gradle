// -*- Groovy -*-
// build.gradle
//
// Gradle build script for EC-OpenStack plugin.
//
// Copyright (c) 2015 Electric Cloud, Inc.
// All rights reserved

buildscript {
    repositories {
	maven {
		url 'http://dl.bintray.com/ecpluginsdev/maven'
	}

	jcenter()
    }
    dependencies {
        classpath group: 'com.electriccloud.plugins', name: 'flow-gradle-plugin', version: '+'
    }
}

repositories {
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots"
	}
}

group = "com.electriccloud"
description = "Plugins : EC-OpenStack"
version = "1.2.0"

apply plugin: 'flow-gradle-plugin'


dependencies {
	testCompile 'junit:junit:[4,)'
	testCompile 'org.pacesys:openstack4j:2.0.2-SNAPSHOT'
	testCompile group: "net.schmizz", name: "sshj", version: "0.8.1"
	testCompile group: "org.bouncycastle", name: "bcprov-jdk16", version: "1.46"
}

test {
    Properties props = new Properties()

    def propFileName = "ecplugin.properties"

    def propertyFile = new File( propFileName )

    if( propertyFile.exists() ) {
        props.load(new FileInputStream(propFileName))
    }

    systemProperties['COMMANDER_SERVER'] = "$commanderServer"
    systemProperties['COMMANDER_USER'] = props.getProperty("COMMANDER_USER")
    systemProperties['COMMANDER_PASSWORD'] = props.getProperty("COMMANDER_PASSWORD")
    systemProperties['OPENSTACK_USER'] = props.getProperty("OPENSTACK_USER")
    systemProperties['OPENSTACK_PASSWORD'] = props.getProperty("OPENSTACK_PASSWORD")
    systemProperties['OPENSTACK_TENANTID'] = props.getProperty("OPENSTACK_TENANTID")
    systemProperties['OPENSTACK_IDENTITY_URL'] = props.getProperty("OPENSTACK_IDENTITY_URL")
    systemProperties['PLUGIN_VERSION'] = version


 testLogging {
     // Show that tests are run in the command-line output
     events 'started', 'passed'
     exceptionFormat = 'full'
 }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

gwt {
	modules 'ecplugins.openstack.ConfigurationManagement'
}
