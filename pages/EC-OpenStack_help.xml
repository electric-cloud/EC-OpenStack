<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content="HTML Tidy for Windows (vers 25 March 2009), see www.w3.org" />
  <meta content="text/html; charset=us-ascii" http-equiv="content-type" />

  <title>Electric Commander Plugin for OpenStack</title>
  <link rel="stylesheet" href="../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css" media="screen" />
</head>

<body>
  <div class="help">
    <h1>OpenStack</h1>

    <p>Plugin Version @PLUGIN_VERSION@</p>
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />
		
		<p>Revised on May 6, 2015</p>
				
	<h1>Contents</h1>
				
		<ul>
				<li><p><a href="#overview">Overview</a></p></li>
				<li><p><a href="#setupconfig">Setting Up the Plugin Configuration</a></p></li>
				<li><p><a href="#ElectricFlow">Setting Up ElectricCommander</a></p></li>
				<li><p><a href="#procedures">Plugin Procedures</a></p></li>
				<ul>
				<li><a href="#AllocateIP">AllocateIP</a></li>
				<li><a href="#AssociateFloatingIP">AssociateFloatingIP</a></li>
				<li><a href="#AttachVolume">AttachVolume</a></li>
				<li><a href="#Cleanup">Cleanup</a></li>
				<li><a href="#CloudManagerGrow">CloudManagerGrow</a></li>
				<li><a href="#CloudManagerShrink">CloudManagerShrink</a></li>
				<li><a href="#CloudManagerSync">CloudManagerSync</a></li>
				<li><a href="#CreateImage">CreateImage</a></li>
				<li><a href="#CreateInstanceSnapshot">CreateInstanceSnapshot</a></li>
				<li><a href="#CreateKeyPair">CreateKeyPair</a></li>
				<li><a href="#CreateStack">CreateStack</a></li>
				<li><a href="#CreateVolume">CreateVolume</a></li>
				<li><a href="#CreateVolumeSnapshot">CreateVolumeSnapshot</a></li>
				<li><a href="#DeleteKeyPair">DeleteKeyPair</a></li>
				<li><a href="#DeleteStack">DeleteStack</a></li>
				<li><a href="#DeleteVolume">DeleteVolume</a></li>
				<li><a href="#Deploy">Deploy</a></li>
				<li><a href="#DetachVolume">DetachVolume</a></li>
				<li><a href="#ExtendVolume">ExtendVolume</a></li>
				<li><a href="#RebootInstance">RebootInstance</a></li>
				<li><a href="#ReleaseIP">ReleaseIP</a></li>
				<li><a href="#Teardown">Teardown</a></li>
        <li><a href="#UpdateStack">UpdateStack</a></li>
				</ul>
				<li><p><a href="#example">Examples and Use Cases</a></p></li>
				<li><p><a href="#rns">Release Notes</a></p></li>
		</ul>
					
	<h1 id="overview">Overview</h1>

  <p>OpenStack is an Infrastructure as a Service (IaaS) cloud computing project by Rackspace Cloud and NASA. It is free open-source software released under the terms of the Apache License.</p>

  <p>The mission of the OpenStack project is to enable any organization to create and offer cloud computing services running on standard hardware. The community's first official release, code-named Austin, was made available just four months later with plans to release regular updates of the software every few months.</p>

  <p>OpenStack integrates code from NASA's Nebula platform as well as Rackspace's Cloud Files platform.</p>

  <p>For more information about OpenStack, go to </p>
	<ul>
	<li><a href="http://www.openstack.org/">OpenStack website</a></li>
	<li><a href="http://docs.openstack.org/">OpenStack Manuals</a></li>
	<li><a href="http://docs.openstack.org/api/quick-start/content/">OpenStack API Quick Start</a></li>
  <li><a href="http://api.openstack.org/">OpenStack API Reference</a></li>
	</ul>
	
  <h2>ElectricCommander Integration to OpenStack</h2>
				
	<!-- The integration description should answer the questions:
How deep does our integration go? Why should I care? What general
functionality does the plugin include? What functionality does
the plugin omit?
-->

    <p>The plugin communicates with OpenStack through its application programming interface (API), which provides support
  for developers who are building interactive clients of OpenStack using a RESTful application development style. The EC-OpenStack 
	plugin allows users to build a cloud by launching images and assigning metadata to instances, providing a more generic
  interface for managing resources.</p>

  <p>The plugin interact with OpenStack through the Compute API and Image API using PERL to perform the following tasks:</p>

  <ul>
    <li>Create configurations with the connection information.</li>
    <li>Perform actions on machines.</li>
    <li>Deploy and delete servers.</li>
    <li>Create and delete key pairs.</li>
    <li>Create and delete floating IPs.</li>
    <li>Create ElectricCommander resources.</li>
    <li>Create, attach, detach, extend, and delete volumes.</li>
    <li>Create new images.</li>
    <li>Create a snapshot of a server.</li>
    <li>Do hard and soft reboots of a server.</li>
    <li>Deploy, update, and delete HEAT orchestration templates.</li>
  </ul>

  <p>This plugin provides two primary actions: Deploy and Cleanup, which work as a pair within a job.</p>

    <h2>Integrated Version</h2>

    <p>This plugin was developed and tested against OpenStack IceHouse. </p>

    <p>The minimum ElectricCommander supported version is ElectricCommander 3.6.</p>
		
		<p>IMPORTANT: For all parameter descriptions in this document, the required parameters are shown in 
		<span class='required'>bold italics</span>.</p>

    <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>
		
		<div id="CreateConfiguration"><a name='CreateConfiguration' id=
    "CreateConfiguration"></a>

    <p>Plugin configurations are sets of parameters that apply across some or all of the plugin procedures. 
		They reduce repetition of common values, create predefined sets of parameters for end users, and store 
		credentials securely. Each configuration has a unique name that is automatically entered in designated 
		parameters in the procedures.</p>
		
		<p>The <b>Identity Service URL</b> must have http or https followed by your server hostname or IP address.</p>
						
		<h2>Input</h2>
  
    <ol>
		  <li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
		  <li>Find the EC-OpenStack row.</li>
		  <li>Click <b>Configure</b> to open the OpenStack Configurations page.</li> 	
		  <li>Click <b>Create Configuration</b>.</li>
		  <li>To create an OpenStack configuration, enter the following information and click <b>OK</b>. 
			<br /> Remember that you may need to create additional configurations later.</li>
			
			<table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
        <td class="required">Configuration Name</td>
        <td>A unique name for the configuration. (Required)</td>
      </tr>
      <tr>
        <td>Description</td>
        <td>A description for this configuration.</td>
      </tr>
      <tr>
          <td class="required">Identity Service URL</td>

          <td>Provide the host name or IP address of the Identity Service for OpenStack.For example, http://192.168.100.134:8776. Do not include API version or tenant ID in URL here. (Required)</td>
      </tr>

      <tr>
        <td class="required">Compute Service URL</td>

        <td>Provide the host name or IP address of the Compute Service for OpenStack.For example, http://192.168.100.134:8776. Do not include API version or tenant ID in URL here. (Required)</td>
      </tr>


          <tr>
              <td class="required">Block Storage URL:</td>

              <td>Provide the host name or IP address of the Block Storage Service for OpenStack.For example, http://192.168.100.134:8776. Do not include API version or tenant ID in URL here. (Required)</td>
          </tr>

          <tr>
              <td class="required">Image Service URL</td>

              <td>Provide the host name or IP address of the Image Service for OpenStack.For example, http://192.168.100.134:8776. Do not include API version or tenant ID in URL here. (Required)</td>
          </tr>

          <tr>
              <td class="required">Orchestration Service URL</td>

              <td>Provide the host name or IP address of the Orchestration Service for OpenStack.For example, http://192.168.100.134:8776. Do not include API version or tenant ID in URL here. (Required)</td>
          </tr>

          <tr>
              <td class="required">Keystone API version</td>

              <td>The Keystone API version. (Required)</td>
          </tr>

          <tr>
              <td class="required">Blockstorage API version</td>

              <td>The OpenStack block storage API version (Required)</td>
          </tr>

          <tr>
              <td class="required">Image API version</td>

              <td>The Image Service API version (Required)</td>
          </tr>



          <tr>
        <td class="required">Configuration Credential
        Parameters</td><!-- Describe *exactly* which user name and password go here.
Is it for a particlar machine? Is it for a website? Is it for a
particular function in the tool? Does it depend on another
parameter (like a machine name) for its meaning?
-->

        <td>OpenStack account username/password. This
        account must have enough privileges to perform API
        functions. (Required)</td>
      </tr>
      <tr>
        <td class="required">Resource</td>
        <td>The name of the resource (or pool) on which the integration steps can run. The default is <i>local</i>. (Required)</td>
      </tr>
      <tr>
        <td class="required">Workspace</td>
        <td>The workspace where dynamic resources are created by this configuration. The default is <i>default</i>. (Required)</td>
      </tr>
      <tr>
        <td class="required">Debug Level</td>
        <td>The level for output: 0=errors only, 1=normal headers and responses, 2+=debugging information included.(Required)</td>
      </tr>
      </tbody>
    </table>
		
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/configuration_panel.png" />
			
		</ol>
		
		<h3>Output</h3>	 
		
		<p>The OpenStack Configurations page now shows the new configuration.</p>
		
		<p>You can also manage your OpenStack configurations on this page. Click <b>Edit</b> to modify an existing configuration or 
		<b>Delete</b> to remove an existing configuration.</p>
		
		</div>
			
		<h1 id="procedures">Plugin Procedures</h1>
		
		<div id="AllocateIP"><a name="AllocateIP" id="AllocateIP"></a>

    <h2>AllocateIP</h2>

    <p>This procedure creates a new OpenStack floating IP address to use with your OpenStack account. The plugin stores properties 
		on the ElectricCommander server in the location in the <b>Results Location</b> and <b>Results tag</b> fields. The default location 
		in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> if the <b>Results Location</b> is blank.</p>
		
		<h3>Input</h3>
		
			<ol>
			<li>Go to the AllocateIP procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td>Results Location</td>
          <td>The location in the Commander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
        </tr>
        <tr>
          <td class="required">Results tag</td>
          <td>The unique tag for this provision to separate it from the other deployments stored in the same location. The default is <i>$[jobStepId]</i>. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/allocate_ip_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>AllocateIP</b> step, click the Log button to see the diagnostic information.</p>	

    </div>
		
		<div id="AssociateFloatingIP"><a name="AssociateFloatingIP" id="AssociateFloatingIP"></a>

    <h2>AssociateFloatingIP</h2>

    <p>This procedure associates a floating IP address to an existing instance.</p>
		
		<h3>Input</h3>
		
			<ol>
			<li>Go to the AssociateFloatingIP procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>The ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Server Id</td>
          <td>The ID of the target server with the IP address. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/associate_floatingip.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>AssociateFloatingIP</b> step, click the Log button to see the diagnostic information.</p>	

    </div>
		
		<div id="AttachVolume"><a name="AttachVolume" id="AttachVolume"></a>

    <h2>AttachVolume</h2>

    <p>This procedure attaches volumes that are created with the volume API to server instances. You can attach a volume
    to one instance.</p>
    <p>The plugin stores properties on the Commander server at the location specified the <b>Results Location</b> and <b>Results tag</b>
		fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> if the <b>Results Location</b> 
		is empty.</p>
		
		<h3>Input</h3>

			<ol>
			<li>Go to the AttachVolume procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Server ID</td>
                      <td>ID of the server to which the volume is attached. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Volume ID</td>
                      <td>ID of the volume to attach. (Required)</td>
                  </tr>
                  <tr>
                      <td>Name of device</td>
                      <td>Name of the device, such as <i>/dev/vdb</i>, set after the volume is attached to a server. If you do not
											specify a name, OpenStack automatically assigns the device a name.</td>
                  </tr>
                  <tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The default is <i>$[jobStepId]</i>. (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/attach_volume.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>AttachVolume</b> step, click the Log button to see the diagnostic information.</p>	
					
		</div>
		
		<div id="Cleanup"><a name="Cleanup" id="Cleanup"></a>

    <h2>Cleanup</h2>

    <p>This procedure deletes an existing OpenStack server instance that was created using the Deploy procedure.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the Cleanup procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Server ID(s)</td>
          <td>The IDs of one ore more servers to delete. Use a comma-separated list for more than one server. (Required)</td>
        </tr>
        <tr>
          <td>Resource name(s)</td>
          <td>The name of the resources to delete. Use a comma-separated list for more than one resource.</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/cleanup_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>Cleanup</b> step, click the Log button to see the diagnostic information.</p>	

    </div>
		
		<div id="CloudManagerGrow"><a name="CloudManagerGrow" id="CloudManagerGrow"></a>

    <h2>CloudManagerGrow</h2>

    <p>This procedure allows the plugin to work with the CloudManager plugin. It calls the Deploy procedure and is run by the 
		CloudManager.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the CloudManagerGrow procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
           <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>The ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Number of Servers</td>
          <td>The number of servers to deploy. If there are more than one, a suffix (_#) is added to server names. The default is 1.
          (Required)</td>
        </tr>
        <tr>
          <td class="required">Server name</td>
          <td>Name of the new server. (Required)</td>
        </tr>
        <tr>
          <td class="required">Image ID</td>
          <td>The ID of an existing image in Openstack. (Required)</td>
        </tr>
        <tr>
          <td class="required">Flavor ID</td>
          <td>The ID for the flavor to use. (Required)</td>
        </tr>
        <tr>
            <td class="required">Results tag</td>
            <td>The unique tag for this provision to separate it from other deployments stored in the same location. 
						The default is <i>$[jobStepId]</i>. (Required)</td>
				</tr>	
        <tr>
          <td class="required">Resource Pool(s)</td>
          <td>The names of resource pools in ElectricCommander that will be asssociated with the machines in this configuration 
					if resources are created. For more than one resource pool, specify the names in a space-separated list. (Required)</td>
        </tr>
        <tr>
          <td>Resource workspace</td>
          <td>The ElectricCommander workspace that the resource uses.</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/cloudmanager_grow_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CloudManagerGrow</b> step, click the Log button to see the diagnostic information.</p>	
			
		</div>

    <div id="CloudManagerShrink"><a name="CloudManagerShrink" id="CloudManagerShrink"></a>

    <h2>CloudManagerShrink</h2>

    <p>This procedure allows the plugin to work with the CloudManager plugin. It calls the Cleanup procedure and is run by 
		the CloudManager.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the CloudManagerShrink procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">List of Deployments</td>
          <td>A list of deployments that were previously created by the CloudManagerGrow procedure to stop. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/cloudmanager_shrink_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CloudManagerShrink</b> step, click the Log button to see the diagnostic information.</p>	

   	</div>

    <div id="CloudManagerSync"><a name="CloudManagerSync" id="CloudManagerSync"></a>

    <h2>CloudManagerSync</h2>

    <p>This procedure allows the plugin to work with CloudManager plugin. It verifies that the instances it has recorded as <i>alive</i>
    are still alive. It is run by the CloudManager.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the CloudManagerSync procedure.</li>
			<li>Enter the following parameters:<br />
       <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
           <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">List of Deployments</td>
          <td>A list of deployments that were previously created by the CloudManagerGrow procedure to verify. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/cloudmanager_sync_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CloudManagerSync</b> step, click the Log button to see the diagnostic information.</p>	

		</div>

		<div id="CreateImage"><a name="CreateImage" id="CreateImage"></a>

     <h2>CreateImage</h2>

     <p>This procedure creates a virtual machine (VM) image. You can launch new instances from these images.</p>
     <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and
			<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
			if the <b>Results Location</b> field is empty.</p>
					
			<h3>Input</h3>
		
		<ol>
			<li>Go to the CreateImage procedure.</li>
			<li>Enter the following parameters:<br />
           <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Image name</td>
                      <td>Display name of the new image. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Disk format</td>
                      <td>The disk format of a VM image. Valid values are AKI,AMI,ARI,Raw,iso, vhd, vdi, qcow2,and vmdk. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Container format</td>
                      <td>The container format for the new image. Valid values are aki, ari, ami, bare, and ovf. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Is image location a local file ?</td>
                      <td>Select this parameter in the check box if the source image file is on the local machine. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Image path</td>
                      <td>Path to the image on the local machine or a valid and direct URL to image location. (Required)</td>
                  </tr>
                  <tr>
                      <td>Size</td>
                      <td>Size of the raw image file from which the new image is generated.</td>
                  </tr>
                  <tr>
                      <td>Checksum</td>
                      <td>The checksum of the raw image file.</td>
                  </tr>
                  <tr>
                      <td>Min-Ram</td>
                      <td>The minimum RAM in megabytes (MBs) required to run this image on a server.</td>
                  </tr>
                  <tr>
                      <td>Min-Disk</td>
                      <td>The minimum disk space in gigabytes (GBs) required to run this image on a server.</td>
                  </tr>
                  <tr>
                      <td>Owner</td>
                      <td>The ID of the owner (tenant) of the image.</td>
                  </tr>
                  <tr>
                      <td>Results Location</td>
                     <td>The location on the Commander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The default is <i>$[jobStepId]</i>. (Required)</td>
                  </tr>
              </tbody>
          </table>
    		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_image.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateImage</b> step, click the Log button to see the diagnostic information.</p>	
						
		</div>
		
		<div id="CreateInstanceSnapshot"><a name="CreateInstanceSnapshot" id="CreateInstanceSnapshot"></a>

      <h2>CreateInstanceSnapshot</h2>

      <p>This procedure creates a snapshot from the instance. You can launch an instance from a snapshot.</p>
      <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and 
			<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> 
			if the <b>Results Location</b> field is empty.</p>
			
			<h3>Input</h3>
		
		<ol>
			<li>Go to the CreateImage procedure.</li>
			<li>Enter the following parameters:<br />
            <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>The ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Instance snapshot name</td>
                      <td>The display name of the snapshot. (Required)</td>
                  </tr>

                  <tr>
                      <td class="required">Server ID</td>
                      <td>The ID of the server instance for which a snapshot is created. (Required)</td>
                  </tr>

                  <tr>
                      <td>Metadata</td>

                      <td>Metadata for the snapshot in this format: key1,value1,key2,value2 ... </td>
                  </tr>
									<tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is 
											<i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											default is <i>$[jobStepId]</i>. (Required)</td>
                  </tr>
              </tbody>
          </table>
    		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_image.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateImage</b> step, click the Log button to see the diagnostic information.</p>	

         
					
					<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_instance_snapshot.png" />
					
					</div>
		
		<div id="CreateKeyPair"><a name="CreateKeyPair" id="CreateKeyPair"></a>

    <h2>CreateKeyPair</h2>

    <p>This procedure creates a new OpenStack key pair. The public key is stored by OpenStack and the private key is returned to you. 
		If a key with the specified name already exists, OpenStack returns an error.</p>
    <p>The plugin store properties on the ElectricCommander server at the location in the <b>Results Location</b> and the <b>Results tag</b> fields.
		The default location is the job directory called /myJob/Openstack/deployed/<i>Provision tag value</i> if <b>Results Location</b> field is 
		empty.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the CreateKeyPair procedure.</li>
			<li>Enter the following parameters:<br />
     <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration wtih the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>The ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Key name</td>
          <td>A unique name for the key pair. The default is <i>cmdr-$[jobStepId]</i>. (Required)</td>
        </tr>
        <tr>
          <td>Results Location</td>
          <td>The location on the ElectricCommander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
        </tr>
        <tr>
          <td class="required">Results tag</td>
          <td>The unique tag for this provision to separate it from other deployments stored in the same location. The default is <i>$[jobStepId]</i>. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_key_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateKeyPair</b> step, click the Log button to see the diagnostic information.</p>	

   	</div>
		
		<div id="CreateStack"><a name="CreateStack" id="CreateStack"></a>

       <h2>CreateStack</h2>

       <p>Heat is an OpenStack service to orchestrate multiple composite cloud applications using templates. 
			 This procedure creates a new HEAT stack from a specified HEAT template. You can enter the template in the 
			 <b>Template</b> field or the URL of the template.</p>
			 <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and 
			 <b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
			 if the <b>Results Location</b> field is empty.</p>
							
				<h3>Input</h3>
		
		  <ol>
			<li>Go to the CreateStack procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
                  <thead>
                      <tr>
                          <th>Parameter</th>
                          <th>Description</th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td class="required">Configuration</td>
                           <td>The name of a valid existing configuration with the connection information. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Tenant ID</td>
                          <td>The ID of the tenant to use. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Stack Name</td>
                          <td>The display name for the new stack. (Required)</td>
                      </tr>
                      <tr>
                          <td>Template</td>
                          <td>The stack template to instantiate, creating a HEAT stack.</td>
                      </tr>
                      <tr>
                          <td>Template URL</td>
                          <td>A URI to the location containing the updated stack template to instantiate. You specify this parameter 
													only if you are not entering the template in the <b>Template</b> field.</td>
                      </tr>
                     <tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is 
											<i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											default is <i>$[jobStepId]</i>. (Required)</td>
									</tr>	
                  </tbody>
              </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_stack.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateStack</b> step, click the Log button to see the diagnostic information.</p>	

    </div>
		
		<div id="CreateVolume"><a name="CreateVolume" id="CreateVolume"></a>

   <h2>CreateVolume</h2>

       <p>This procedure creates a new OpenStack volume. A volume is a detachable block storage device. You can attach a volume
			  to one instance at a time.</p>
       <p>The plugin stores properties on the Commander server in the location in the <b>Results Location</b> and <b>Results tag</b> fields.
			 The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> if the <b>Results location</b>
			 is empty.</p>
			 
			<h3>Input</h3>
			 
			<ol>
			<li>Go to the CreateVolume procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Volume name</td>
                      <td>The name for the new volume that appears in the UI. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Size (in gigabytes [GBs])</td>
                      <td>Size of the  volume in GB. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Type of volume</td>
                      <td>The volume type. (Required)</td>
                  </tr>
                  <tr>
                      <td>Availability zone</td>
                      <td>The availability zone where the new zone is created. </td>
                  </tr>
                  <tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from the other deployments stored in the same location. The 
											default is <i>$[jobStepId]</i>. (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_volume.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateVolume</b> step, click the Log button to see the diagnostic information.</p>	

		</div>

		<div id="CreateVolumeSnapshot"><a name="CreateVolumeSnapshot" id="CreateVolumeSnapshot"></a>

          <h3>CreateVolumeSnapshot</h3>

          <p>This procedure creates a snapshot of a volume, a point-in-time complete copy of the volume. 
					You can create a volume from this snapshot.</p>
          <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and 
					<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
					if the <b>Results Location</b> field is empty.</p>
					
					<h3>Input</h3>
			 
			<ol>
			<li>Go to the CreateVolumeSnapshot procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Name of volume snapshot</td>
                      <td>The display name of the snapshot. (Required)</td>
                  </tr>
                  <tr>
                      <td>Description</td>
                      <td>The description of the snapshot.</td>
                  </tr>
                  <tr>
                      <td>Create a snapshot forecefully?</td>
                      <td>Select this parameter (in the check box) to forcefully create a snapshot of a volume even if it is 
											attached to an instance. Selecting this parameter sets it to <i>true</i>. <br />
											The default is <i>false</i>; the parameter is not selected.</td>
									</tr>
                  <tr>
                      <td class="required">Volume ID</td>
                      <td>The ID of the volume from which to create a snapshot. (Required)</td>
                  </tr>
                 <tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is 
											<i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											default is <i>$[jobStepId]</i>. (Required)</td>
									</tr>	
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/create_volume_snapshot.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>CreateVolumeSnapshot</b> step, click the Log button to see the diagnostic information.</p>	
					
		</div>
		
		<div id="DeleteKeyPair"><a name="DeleteKeyPair" id="DeleteKeyPair"></a>

    <h2>DeleteKeyPair</h2>

    <p>This procedure deletes an existing OpenStack key pair. The public key is removed from OpenStack. You must own the key pair.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the DeleteKeyPair procedure.</li>
			<li>Enter the following parameters:<br />
       <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Key name</td>
          <td>Name of the key pair to delete. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/delete_key_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>DeleteKeyPair</b> step, click the Log button to see the diagnostic information.</p>	

    </div>
		
		<div id="DeleteStack"><a name="DeleteStack" id="DeleteStack"></a>

          <h2>DeleteStack</h2>

              <p>This procedure deletes an existing stack.</p>
              <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and
							<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
							if the <b>Results Location</b> field is empty.</p>
							
							<h3>Input</h3>
		
		<ol>
			<li>Go to the DeleteStack procedure.</li>
			<li>Enter the following parameters:<br />
       <table class="grid">
                  <thead>
                      <tr>
                          <th>Parameter</th>
                          <th>Description</th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td class="required">Configuration</td>
                           <td>The name of a valid existing configuration with the connection information. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Tenant ID</td>
                          <td>The ID of the tenant to use. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Stack Name</td>
                          <td>The display name of the stack to delete. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Stack ID</td>
                          <td>The ID of the stack to delete. (Required)</td>
                      </tr>
                     <tr>
                          <td>Results Location</td>
                          <td>The location on the Commander server where the properties are stored. The default is 
											    <i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                          <td class="required">Results tag</td>
                          <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											    default is <i>$[jobStepId]</i>. (Required)</td>
									</tr>	
                  </tbody>
              </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/delete_stack.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>DeleteStack</b> step, click the Log button to see the diagnostic information.</p>	

		</div>
		
		<div id="DeleteVolume"><a name="DeleteVolume" id="DeleteVolume"></a>

    <h2>DeleteVolume</h2>

   <p>This procedure deletes a volume. A volume is a detachable block storage device.</p>
   <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and
	 <b>Results tag</b> fields. The default location is the the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
	 fields if the <b>Results Location</b> is empty.</p>

		<h3>Input</h3>
		
		<ol>
			<li>Go to the DeleteVolume procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Volume ID</td>
                      <td>ID of the volume to delete. (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/delete_volume.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>DeleteVolume</b> step, click the Log button to see the diagnostic information.</p>	
					
    </div>
    
    <div id="Deploy"><a name="Deploy" id="Deploy"></a>

    <h2>Deploy</h2>

    <p>This procedure calls the CreateKey procedure and deploys one or more new instances. It store properties on the Commander 
		server at the location specified in the <b>Results Location</b> and the <b>Results tag</b> fields. The default location is in the 
		directory for the job deployment results (/myJob/Openstack/deployed/<i>Results tag value</i>) if the <b>Results Location</b> field 
		is empty.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the Deploy procedure.</li>
			<li>Enter the following parameters:<br />
     <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Key Pair Name</td>
          <td>Name of an existing key pair. (Required)</td>
        </tr>
        <tr>
          <td class="required">Number of Servers</td>
          <td>Number of servers to deploy. If there are more than one, a suffix (_#) is added to the server names. The default is 1.
          (Required)</td>
        </tr>
        <tr>
          <td class="required">Server name</td>
          <td>Name of the new server. (Required)</td>
        </tr>
        <tr>
          <td class="required">Image ID</td>
          <td>ID of an existing image in OpenStack. (Required)</td>
        </tr>
        <tr>
          <td class="required">Flavor ID</td>
          <td>ID of the flavor to use. (Required)</td>
        </tr>
				 <tr>
          <td>Security Group(s)</td>
          <td>One or more security groups in a newline delimited list.</td>
        </tr>
        <tr>
           <td>Availability Zone</td>
           <td>The availability zone in which to launch the server.</td>
          </tr>
          <tr>
              <td>Customization Script</td>
              <td>Configuration information or scripts to execute when the server is launched.</td>
          </tr>
          <tr>
          <td>Results Location</td>
          <td>The location on the Commander server where the properties are stored. The default is <i>/myJob/OpenStack/deployed</i>.</td>
        </tr>
        <tr>
          <td class="required">Results tag</td>
          <td>The unique tag for this provision to keep it separate from the other deployments stored in the same location. The default is <i>$[jobStepId]</i>. (Required)</td>
        </tr>
        <tr>
          <td>Create Resource?</td>
          <td>Select this parameter (in the check box) to create resources for deployed servers.</td>
        </tr>
				 <tr>
          <td>Associate IP?</td>
          <td>Select this parameter in the check box to associate the IP address with the deployed instance.</td>
        </tr>
        <tr>
          <td>Resource Pool</td>
          <td>Name of the resource pool in ElectricCommander that is associated with the machines in this configuration when resources are created.</td>
        </tr>
        <tr>
          <td>Resource workspace</td>
          <td>The ElectricCommander workspace that the resources uses.</td>
        </tr>
        </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/deploy_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>Deploy</b> step, click the Log button to see the diagnostic information.</p>	

    </div>

   <div id="DetachVolume"><a name="DetachVolume" id="DetachVolume"></a>

   <h2>DetachVolume</h2>

   <p>This procedure detaches a volume from a server. A volume is a detachable block storage device.</p>
   <p>The plugin store properties on the Commander server at the location specified in the <b>Results Location</b> and <b>Results tag</b>
	 fields. The default location is the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> if the <b>Results Location</b> 
	 field is empty.</p>
					
	 <h3>Input</h3>
		
		<ol>
			<li>Go to the DetachVolume procedure.</li>
			<li>Enter the following parameters:<br />
          <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Server ID</td>
                      <td>ID of the server from which the volume is detached. (Required)</td>
                  </tr>
									 <tr>
                      <td class="required">Volume ID</td>
                      <td>ID of the volume to detach. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Attachment ID</td>
    
                  <td>ID of the volume attachment. (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/detach_volume.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>DetachVolume</b> step, click the Log button to see the diagnostic information.</p>
					
		</div>
		
    <div id="ExtendVolume"><a name="ExtendVolume" id="ExtendVolume"></a>

    <h2>ExtendVolume</h2>

    <p>This procedure extends the size of the specified volume. The volume must be in <i>available state</i> before the 
		size is extended.</p>
    <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and <b>Results tag</b>
		fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> if the <b>Results Location</b>
		field is empty.</p>
					
		<p><b>Note:</b> Make sure that the ExtendVolume procedure is supported by the Openstack services before using this step.</p>

		<h3>Input</h3>
		
		<ol>
			<li>Go to the ExtendVolume procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Volume ID</td>
                      <td>ID of the volume to extend. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">New size</td>
                      <td>New size of the volume. (Required)</td>
                  </tr>
                  <tr>
                      <td>Results Location</td>
                      <td>The location on the Commander server where the properties are stored. The default is 
											<i>/myJob/OpenStack/deployed</i>.</td>
                  </tr>
                  <tr>
                      <td class="required">Results tag</td>
                      <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											default is <i>$[jobStepId]</i>. (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/extend_volume.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>ExtendVolume</b> step, click the Log button to see the diagnostic information.</p>	
					
		</div>
		
		<div id="RebootInstance"><a name="RebootInstance" id="RebootInstance"></a>

      <h2>RebootInstance</h2>

      <p>This procedure reboots a server instance.</p>
      <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and 
			<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i> 
			if the <b>Results Location</b> field is empty.</p>
			
			<h3>Input</h3>
		
		  <ol>
			<li>Go to the RebootInstance procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
              <thead>
                  <tr>
                      <th>Parameter</th>
                      <th>Description</th>
                  </tr>
              </thead>
              <tbody>
                  <tr>
                      <td class="required">Configuration</td>
                      <td>The name of a valid existing configuration with the connection information.  (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Tenant ID</td>
                      <td>ID of the tenant to use. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Server ID</td>
                      <td>ID of the server to reboot. (Required)</td>
                  </tr>
                  <tr>
                      <td class="required">Reboot Type</td>
                      <td>Type of the reboot action (<i>Hard</i> or <i>Soft</i>). (Required)</td>
                  </tr>
              </tbody>
          </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/reboot.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>RebootInstance</b> step, click the Log button to see the diagnostic information.</p>	

    </div>

    <div id="ReleaseIP"><a name="ReleaseIP" id="ReleaseIP"></a>

    <h2>ReleaseIP</h2>

    <p>This procedure deletes an existing OpenStack floating IP address that is allocated to your account.</p>
		
		<h3>Input</h3>
		
		<ol>
			<li>Go to the ReleaseIP procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="required">Configuration</td>
          <td>The name of a valid existing configuration with the connection information. (Required)</td>
        </tr>
        <tr>
          <td class="required">Tenant ID</td>
          <td>ID of the tenant to use. (Required)</td>
        </tr>
        <tr>
          <td class="required">Floating Address ID</td>
          <td>ID of the floating IP address to delete. (Required)</td>
        </tr>
      </tbody>
    </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/release_ip_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>ReleaseIP</b> step, click the Log button to see the diagnostic information.</p>	
    		
		</div>
		
		   <div id="Teardown"><a name="Teardown" id="Teardown"></a>

              <h2>Teardown</h2>

              <p>This procedure deletes an existing OpenStack server.</p>
              							
							<h3>Input</h3>
		
		<ol>
			<li>Go to the Teardown procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
                  <thead>
                      <tr>
                          <th>Parameter</th>
                          <th>Description</th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td>Configuration</td>
                           <td>The name of a valid existing configuration with the connection information.</td>
                      </tr>
                      <tr>
                          <td>Tenant ID</td>
                          <td>The ID of the tenant to use.</td>
                      </tr>
                      <tr>
                          <td class="required">Resource name(s)</td>
                          <td>The names of the resources to delete. For more than one resource, use a comma-separated list. (Required)</td>
                      </tr>
                   </tbody>
              </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/teardown_panel.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>Teardown</b> step, click the Log button to see the diagnostic information.</p>	

		</div>

   <div id="UpdateStack"><a name="UpdateStack" id="UpdateStack"></a>

              <h2>UpdateStack</h2>

              <p>This procedure updates an existing stack.</p>
              <p>The plugin stores properties on the Commander server at the location specified in the <b>Results Location</b> and
							<b>Results tag</b> fields. The default location in the job directory called /myJob/Openstack/deployed/<i>Provision tag</i>
							if the <b>Results Location</b> field is empty.</p>
							
							<h3>Input</h3>
		
		<ol>
			<li>Go to the UpdateStack procedure.</li>
			<li>Enter the following parameters:<br />
      <table class="grid">
                  <thead>
                      <tr>
                          <th>Parameter</th>
                          <th>Description</th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td class="required">Configuration</td>
                           <td>The name of a valid existing configuration with the connection information. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Tenant ID</td>
                          <td>The ID of the tenant to use. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Stack Name</td>
                          <td>The display name of the stack to update. (Required)</td>
                      </tr>
                      <tr>
                          <td class="required">Stack ID</td>
                          <td>The ID of the stack to update. (Required)</td>
                      </tr>
                      <tr>
                          <td>Template</td>
                          <td>The template with which to update the stack.</td>
                      </tr>
                      <tr>
                          <td>Template URL</td>
                          <td>A URI to the location containing the updated stack template to instantiate. You specify this parameter 
													only if you are not entering the template in the <b>Template</b> field.</td>
                      </tr>
                      <tr>
                         <td>Results Location</td>
                         <td>The location on the Commander server where the properties are stored. The default is 
											   <i>/myJob/OpenStack/deployed</i>.</td>
                      </tr>
                      <tr>
                         <td class="required">Results tag</td>
                         <td>The unique tag for this provision to separate it from other deployments stored in the same location. The 
											   default is <i>$[jobStepId]</i>. (Required)</td>
									   </tr>	
                  </tbody>
              </table>
		</li>
						
		<br />
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/parameters/update_stack.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricCommander.</p>
				
		<p>In the <b>UpdateStack</b> step, click the Log button to see the diagnostic information.</p>	

		</div>

          
		
    <h1>Use Cases and Examples</h1>
    <!-- This section is for examples and use cases, including screenshots of the new Parameter Panel with example values filled in.
Unfortunately, I can't tell you what exactly to put here, but it's OK to put what seems like too much! Include both parameter
values and output where appropriate. Use a separate 'h2' header for each example. Under the h2 header try to stay with the style
outline used above where possible.
-->

    <h2 id="overview">Use Case: Deploy, Consume, and Cleanup a Job</h2>

    <p>Deploy and cleanup work as a pair within a job.</p>

    <p>The most common use for this plugin is to create a server, create ElectricCommander resources assigned to it, 
		use the resources to run some operations, and then delete the resource and the server. To accomplish these tasks you must:</p>

    <ol>
      <li>Create a plugin configuration.</li>
      <li>Deploy an OpenStack server.</li>
      <li>Create resources for this deployment.</li>
      <li>Use the resources.</li>
      <li>Delete the resources.</li>
      <li>Delete the deployed server.</li>
    </ol>

    <h4>Create a Plugin Configuration</h4>
		
		 <ol>
		  <li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
		  <li>Find the EC-OpenStack row.</li>
		  <li>Click <b>Configure</b> to open the OpenStack Configurations page.</li> 	
		  <li>Click <b>Create Configuration</b>.</li>
		  <li>To create an OpenStack configuration, enter the following information and click <b>OK</b>. 
      <br />
      <img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/create_config.png" />
			</li>
      <p>After the configuration is created, you can now see it in the <b>OpenStack Configurations</b> page.</p>.
			</ol>

    <h4>Deploy an OpenStack Server</h4>
		
		<ol>
			<li>Go to the Deploy procedure.</li>
			<li>Enter the following parameters:</li>
      <img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/deploy_parameters.png" />
			
		</ol>

    <h4>Consume</h4>

    <p>Create a new command step to use a resource that you created.</p>
		<p>In this example, add a resource from a resource pool using the ec-perl sleep command for 30 seconds:</p>
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/consume_parameters.png" />

    <h4>Clean Up</h4>

    <p>Create a Cleanup step as follows:</p>
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/cleanup_parameters.png" />

    <h4>Results and Output</h4>

    <p>After the job runs, you can view the results in ElectricCommander:</p>
		
	  <img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/job.png" />
		<br />
		
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/results.png" />

    <p>Deploy output:</p>
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/deploy_log.png" />

    <p>Cleanup output:</p>
		<img alt="" src="../../plugins/@PLUGIN_KEY@/images/use_cases/Case_1/cleanup_log.png" />


    <h1 id="rns">Release Notes</h1>
      <h2>@PLUGIN_KEY@ 1.2.0</h2>
      <p>The following procedures were added:</p>
      <ul>
          <li>CreateVolume to create a new volume.</li>
          <li>ExtendVolume to extend the size of a volume.</li>
          <li>AttachVolume to attach the volume to a server instance.</li>
          <li>DetachVolume to detach the volume from a server instance.</li>
          <li>DeleteVolume to delete a volume from an OpenStack block storage.</li>
          <li>CreateImage to create a virtual machine (VM) image on OpenStack Image Service Glance.</li>
          <li>CreateInstanceSnapshot to create a snapshot of a server instance.</li>
          <li>CreateVolumeSnapshot to create a snaphshot of a volume.</li>
          <li>CreateStack to create a HEAT stack from a HEAT template.</li>
          <li>UpdateStack to update an existing stack with a template.</li>
          <li>DeleteStack to delete an existing stack.</li>
      </ul>
      <p>The Deploy procuedure was updated to add support for customization scripts, availability zones, security groups, 
			and deployments using an instance snapshot.</p>
      
			
    <h2>@PLUGIN_KEY@ 1.1.2</h2>
    <ul>
      <li>Added properties in <i>ec_cloudprovisioning_plugin</i> property sheet for ElectricFlow Deploy.</li>
    </ul>
		
  <h2>@PLUGIN_KEY@ 1.1.1</h2>
  <ul>
    <li>Added support for Keystone v3 authorization.</li>
    <li>Decoupled key pairs in creation and deletion operations from the Deploy and Cleanup procedures.</li>
    <li>Added the AssociateFloatingIP procedure to associate floating IP addresses to existing VMs.</li>
    <li>Fixed the <b>Create Resource?</b> parameter in the Deploy procedure.</li>
  </ul>
	
	<h2>@PLUGIN_KEY@ 1.0.0</h2>

    <ul>
      <li>Added the configuration management procedures.</li>
      <li>Added the AllocateIP, Cleanup, CreateKeyPair, DeleteKeyPair, Deploy, and ReleaseIP procedures.</li>
      <li>Implemented CloudManager support.</li>
      <li>Implemented the XML parameter panel.</li>
      <li>Added a Help link to each procedure.</li>
      <li>Added the Help page.</li>
      <li>Added use cases.</li>
    </ul>
		
  </div>
	
</body>

</html>
